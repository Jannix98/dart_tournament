<UserControl x:Class="DartTournament.WPF.Controls.TeamOverview.TeamOverviewView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:DartTournament.WPF.Controls.TeamOverview"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:valueConverter="clr-namespace:DartTournament.WPF.ValueConverter"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.DataContext>
        <local:TeamOverviewVM/>
    </UserControl.DataContext>
    <UserControl.Resources>
        <valueConverter:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <!-- AppBar -->
        <ToolBar Background="{DynamicResource MaterialDesignPaper}">
            <TextBlock Text="Teams verwalten"
                       FontSize="20"
                       FontWeight="Bold" />
        </ToolBar>

        <Grid Grid.Row="1" VerticalAlignment="Top" Visibility="{Binding IsLoading, Converter={StaticResource BoolToVisibilityConverter}, FallbackValue=Collapsed}">
            <ProgressBar IsIndeterminate="True"></ProgressBar>
        </Grid>
        <Grid Grid.Row="1"
              Visibility="{Binding IsLoading, Converter={StaticResource BoolToVisibilityConverter}, ConverterParameter=invert, FallbackValue=Visible}"> 
            <!-- Team Liste -->
            <ListBox 
                     ItemsSource="{Binding Teams}"
                     SelectedItem="{Binding SelectedTeam}"
                     Margin="10">
                <ListBox.ItemContainerStyle>
                    <Style TargetType="ListBoxItem"
                           BasedOn="{StaticResource MaterialDesignListBoxItem}">
                        <Setter Property="HorizontalContentAlignment"
                                Value="Stretch" />
                        <!-- ListBoxItem auf volle Breite -->
                    </Style>
                </ListBox.ItemContainerStyle>
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <!--<Border Padding="10"
                Background="Transparent"
                BorderThickness="1"
                BorderBrush="Gray">-->
                        <Grid Width="Auto"
                              VerticalAlignment="Stretch"
                              HorizontalAlignment="Stretch"
                              Background="Transparent">
                            <!-- Hover-Effekt -->

                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <!-- Teamname (flexibel) -->
                                <ColumnDefinition Width="Auto" />
                                <!-- Buttons -->
                            </Grid.ColumnDefinitions>

                            <!-- Teamname links -->
                            <TextBlock Text="{Binding Name}"
                                       FontSize="16"
                                       VerticalAlignment="Center"
                                       Grid.Column="0" />

                            <!-- Buttons rechts, standardmäßig unsichtbar -->
                            <StackPanel x:Name="ButtonPanel"
                                        Orientation="Horizontal"
                                        Grid.Column="1"
                                        HorizontalAlignment="Right">
                                <!-- Startet unsichtbar -->
                                <Button Content="✏️"
                                        ToolTip="Bearbeiten"
                                        Command="{Binding DataContext.EditCommand, RelativeSource={RelativeSource AncestorType=Window}}"
                                        CommandParameter="{Binding}"
                                        Style="{StaticResource MaterialDesignFlatButton}" />

                                <Button Content="❌"
                                        ToolTip="Löschen"
                                        Command="{Binding DataContext.DeleteCommand, RelativeSource={RelativeSource AncestorType=Window}}"
                                        CommandParameter="{Binding}"
                                        Style="{StaticResource MaterialDesignFlatButton}"
                                        Foreground="Red" />
                                <StackPanel.Style>
                                    <Style TargetType="StackPanel">
                                        <Setter Property="Visibility"
                                                Value="Hidden" />
                                        <Style.Triggers>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}, Mode=FindAncestor}}"
                                                               Value="True" />
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="Visibility"
                                                        Value="Visible" />
                                            </MultiDataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </StackPanel.Style>
                            </StackPanel>


                        </Grid>
                        <!--</Border>-->
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>

            <!-- Floating Action Button -->
            <Button 
                    VerticalAlignment="Bottom"
                    HorizontalAlignment="Right"
                    Margin="20"
                    Command="{Binding AddTeamCommand}"
                    Style="{StaticResource MaterialDesignFloatingActionButton}">
                <materialDesign:PackIcon Kind="Plus" />
            </Button>
        </Grid>
    </Grid>
</UserControl>
