<UserControl x:Class="DartTournament.WPF.Controls.PlayerOverview.PlayerOverviewView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:DartTournament.WPF.Controls.PlayerOverview"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:valueConverter="clr-namespace:DartTournament.WPF.ValueConverter"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.DataContext>
        <local:PlayerOverviewVM/>
    </UserControl.DataContext>
    <UserControl.Resources>
        <valueConverter:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <Grid Grid.Row="1" VerticalAlignment="Top" Visibility="{Binding IsLoading, Converter={StaticResource BoolToVisibilityConverter}, FallbackValue=Collapsed}">
            <ProgressBar IsIndeterminate="True"></ProgressBar>
        </Grid>
        <Grid Grid.Row="1"
              Visibility="{Binding IsLoading, Converter={StaticResource BoolToVisibilityConverter}, ConverterParameter=invert, FallbackValue=Visible}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="1*" />
                <ColumnDefinition Width="1" />
                <ColumnDefinition Width="1*" />
            </Grid.ColumnDefinitions>
            <!-- Team Liste -->
            <ListBox Grid.Column="0"
                     ItemsSource="{Binding PlayerCollection}"
                     SelectedItem="{Binding SelectedPlayer}"
                     Margin="10">
                <ListBox.ItemContainerStyle>
                    <Style TargetType="ListBoxItem"
                           BasedOn="{StaticResource MaterialDesignListBoxItem}">
                        <Setter Property="HorizontalContentAlignment"
                                Value="Stretch" />
                    </Style>
                </ListBox.ItemContainerStyle>
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <TextBlock Text="{Binding Name}" FontSize="16" VerticalAlignment="Center" />
                            <!--TODO: the button needs to be removed and replaced with something like a gesture capture control around the icon-->
                            <Button Grid.Column="1" Margin="0" IsEnabled="{Binding DataContext.ControlsEnabled, RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}"
                                    Style="{StaticResource MaterialDesignFlatLightButton}"
                                    Visibility="{Binding RelativeSource={RelativeSource AncestorType=ListBoxItem}, Path=IsMouseOver, Converter={StaticResource BoolToVisibilityConverter}}"
                                    Command="{Binding DataContext.EditPlayerCommand, RelativeSource={RelativeSource AncestorType=ListBox}}"
                                    ToolTip="MaterialDesignIconButton">
                                <materialDesign:PackIcon
                                    Kind="Edit" />
                            </Button>
                            <Button Grid.Column="2" Margin="0" IsEnabled="{Binding DataContext.ControlsEnabled, RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}"
                                    Style="{StaticResource MaterialDesignFlatLightButton}"
                                    Visibility="{Binding RelativeSource={RelativeSource AncestorType=ListBoxItem}, Path=IsMouseOver, Converter={StaticResource BoolToVisibilityConverter}}"
                                    Command="{Binding DataContext.DeletePlayerCommand, RelativeSource={RelativeSource AncestorType=ListBox}}"
                                    ToolTip="MaterialDesignIconButton">
                                <materialDesign:PackIcon
                                    Kind="Delete" />
                            </Button>
                        </Grid>
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>

            <!-- Floating Action Button -->
            <Button Grid.Column="0"
                    VerticalAlignment="Bottom"
                    HorizontalAlignment="Right"
                    Margin="20"
                    Command="{Binding AddPlayerCommand}"
                    Style="{StaticResource MaterialDesignFloatingActionButton}">
                <materialDesign:PackIcon Kind="Plus" />
            </Button>

            <GridSplitter Grid.Column="1"
                          Width="2"
                          IsEnabled="False"
                          VerticalAlignment="Stretch"
                          Background="Gray" />

            <Grid Grid.Column="2">
                <Grid VerticalAlignment="Top" HorizontalAlignment="Stretch">
                    <TextBox Grid.Column="0" Text="{Binding SelectedPlayer.Name}" FontSize="16" IsEnabled="{Binding EditIsEnabled}" />
                </Grid>

                <Button Margin="24, 0, 24, 24" Content="Speichern" VerticalAlignment="Bottom" Command="{Binding SavePlayerCommand}"/>
            </Grid>
        </Grid>
    </Grid>
</UserControl>
